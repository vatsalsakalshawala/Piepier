{"version":3,"sources":["Components/Textform.js","Components/Qrcode1.js","App.js","reportWebVitals.js","index.js"],"names":["Textform","props","useState","text","setText","className","heading","id","rows","onChange","event","target","value","onClick","upperText","toUpperCase","lowerText","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","Qrcode","url","setUrl","qr","setQr","type","placeholder","e","QRCode","toDataURL","width","margin","color","dark","light","err","console","error","log","src","href","download","ThemeContext","createContext","App","theme","setTheme","toggleTheme","curr","Provider","classNmae","checked","Qrcode1","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c336b893.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\n\r\nexport default function Textform(props) {\r\n    \r\n \r\n    const handleUpClick =()=>{\r\n        // console.log(\"Button is clicked \" + text);\r\n        let upperText = text.toUpperCase();\r\n        setText(upperText)\r\n    }\r\n    const handleloClick =()=>{\r\n        // console.log(\"Button is clicked \" + text);\r\n        let lowerText = text.toLowerCase();\r\n        setText(lowerText)\r\n    }\r\n    const handleclear =()=>{\r\n        // console.log(\"Button is clicked \" + text);\r\n        let ClearText = '';\r\n        setText(ClearText)\r\n    }\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"Mytext\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n\r\n    const handleOnChange =(event)=>{\r\n        // console.log(\"change  is clicked \");\r\n        setText (event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    // setText(\"New Content\"); correct way to change the state value \r\n    return (\r\n        <div className='textform'> \r\n             <h2>Enter your content</h2>\r\n            <h4>{props.heading}</h4>\r\n            <div className=\"my-3\">\r\n            <textarea className=\"form-control\" id=\"Mytext\" rows=\"6\" onChange={handleOnChange} value={text}>         </textarea>\r\n            </div>\r\n            <button className=\"btn btn-success mx-1.5 \" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-success mx-2 \" onClick={handleloClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-success mx-2 \" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-success mx-2 \" onClick={handleclear}>Clear Text</button>\r\n            {/* <h3 className=\"my-3\">Preview Your content</h3>\r\n            <p>{text}</p> */}    \r\n            <div className='count'>\r\n            <br></br>\r\n            <h2>Word Counter</h2>\r\n             <ul className=\"list-group\">\r\n                <li className=\"list-group-item d-flex justify-content-between align-items-center\">Words\r\n                 <span className=\"badge bg-success rounded-pill\">{text.split(\" \").length}</span> </li>\r\n                 <li className=\"list-group-item d-flex justify-content-between align-items-center\">Letters\r\n                 <span className=\"badge bg-success rounded-pill\">{text.length}</span> </li>\r\n                \r\n                </ul>\r\n                \r\n                {/* <p>{text.split(\" \").length} Words and {text.length} Letters</p>\r\n                {/* <p>\r\n                    <h5>Word Reader (Based on Avg Speed)</h5>\r\n                    {0.008 * text.split(\" \").length} Minutes </p> */} \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import QRCode from 'qrcode'\r\nimport { useState } from 'react'\r\nimport \"./Qrcode.css\"\r\n\r\nfunction Qrcode() {\r\n\tconst [url, setUrl] = useState('')\r\n\tconst [qr, setQr] = useState('')\r\n\r\n\tconst GenerateQRCode = () => {\r\n\t\tQRCode.toDataURL(url, {\r\n\t\t\twidth: 200,\r\n\t\t\tmargin: 2,\r\n\t\t\tcolor: {\r\n\t\t\t\tdark: '#335383FF',\r\n\t\t\t\tlight: '#EEEEEEFF'\r\n\t\t\t}\r\n\t\t}, (err, url) => {\r\n\t\t\tif (err) return console.error(err)\r\n\r\n\t\t\tconsole.log(url)\r\n\t\t\tsetQr(url)\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"qrcode\">\r\n\t\t\t<h1>QR Generator</h1>\r\n\t\t\t<input className=\"urlbox\" type=\"text\" placeholder=\"e.g. https://google.com\" value={url} \r\n\t\t\tonChange={e => setUrl(e.target.value)}  />\r\n\t\t\t<button className=\"generate btn btn-success mx-1.5 \" onClick={GenerateQRCode}>Generate</button>\r\n\t\t\t<br/>\r\n\t\t\t<br/>\r\n\t\t\t{qr && <>\r\n\t\t\t\t<img src={qr} />\r\n\t\t\t\t{/* <br></br>\r\n\t\t\t\t<br></br> */}\r\n\t\t\t\t{/* <a href={qr} download=\"qrcode.png\">Download</a> */}\r\n\t\t\t\t<a href={qr} className=\"btn btn-success mx-1.5\" download=\"qrcode.png\"> Download</a>\r\n\t\t\t</>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Qrcode","import './App.css';\nimport Textform from './Components/Textform';\nimport Qrcode1 from './Components/Qrcode1';\nimport {useState} from 'react';\nimport { createContext } from 'react';\nimport ReactSwitch from \"react-switch\";\n\nexport const ThemeContext = createContext(null);\n\nfunction App() {\n  \n  const [theme, setTheme] = useState(\"light\");\n\n  const toggleTheme = () => {\n    setTheme((curr) => (curr === \"light\" ? \"dark\" : \"light\"));\n  };\n  return (\n    <div id={theme}>\n    <ThemeContext.Provider  classNmae=\"full\" value={{ theme, toggleTheme }}>\n    <div className=\"container\" id={theme}> \n    <div>\n    <nav className=\"navbar navbar-expand-lg navbar-white bg-green\"/>\n    <div className=\"container-fluid\">\n      <a className=\"navbar-brand\" href=\"/\">\n      {/* logo img */}\n      {/* <img src=\"piepier_dark_mode.png\" width=\"200\" height=\"120\"  border=\"0px\"/>\n      <img src=\"piepier_dark_mode.png\" width=\"200\" height=\"120\" /> */}\n          <a className=\"logo\">PIEPIER</a>\n       <div className=\"reactswitch\">\n       <label> {theme === \"light\" ? \"Light Mode\" : \"Dark Mode\"}</label>\n      <ReactSwitch className=\"reactswitch\" onChange={toggleTheme} checked={theme === \"dark\"} />\n       </div>\n        </a>\n        </div>\n      </div>\n      <Qrcode1 id={theme}/>\n    <br/>\n    <Textform id={theme} />\n    <h6>Made with love by Vatsal</h6>\n    <br></br>\n    </div>\n    </ThemeContext.Provider>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}